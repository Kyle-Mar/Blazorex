@page "/"

<img @ref="_spritesheet" hidden src="blazor.png" />

<Canvas Width="_width" Height="_height" 
        OnFrameReady="(t) => OnFrameReady(t)"
        OnCanvasReady="(ctx) => OnCanvasReady(ctx)" />

@code
{
    ElementReference _spritesheet;
    IRenderContext _context;

    int _width = 800;
    int _height = 600;

    float _x = 400;
    float _y = 300;

    float _dx = 1;
    float _dy = 1;
    float _spriteSpeed = 0.25f;
    float _spriteMaxSpeed = 5f;

    int _spriteWidth = 200;
    int _spriteHeight = 200;

    float _lastUpdate = 0;
    float _elapsedTime = 0;

    int renderTarget;
    int rtWidth = 200;
    int rtHeight = 80;
    byte[] data;
    byte[] fireData;

    private void OnCanvasReady(IRenderContext context)
    {
        _context = context;

        renderTarget = _context.CreateImageData(rtWidth, rtHeight);
        data = new byte[rtWidth * rtHeight * 4];
        fireData = new byte[rtWidth * rtHeight];
    }

    private void calculateFirePropagation()
    {
        for (int column = 0; column < rtWidth; column++)
        {
            for (int row = 0; row < rtHeight; row++)
            {
                int pixelIndex = column + (rtWidth * row);
                updateFireIntensityPerPixel(pixelIndex);
            }
        }
    }

    private void updateFireIntensityPerPixel(int currentPixelIndex)
    {
        int belowPixelIndex = currentPixelIndex + rtWidth;
        if (belowPixelIndex >= rtWidth * rtHeight)
            return;

        byte decay = (byte)(Math.Floor(Random.Shared.NextDouble() * 3));
        byte oldValue = fireData[belowPixelIndex];
        byte newValue = (byte)(oldValue - decay);
        fireData[currentPixelIndex] = Math.Max((byte)0, newValue);

        data[currentPixelIndex * 4] =
            data[currentPixelIndex * 4 + 1] =
            data[currentPixelIndex * 4 + 2] = fireData[currentPixelIndex];
        data[currentPixelIndex * 4 + 3] = 255;
    }

    private void Update(float timeStamp)
    {
        _elapsedTime = timeStamp - _lastUpdate;
        _lastUpdate = timeStamp;

        if (_x + _spriteWidth >= _width || _x < 0)
            _dx = -_dx;

        if (_y + _spriteHeight >= _height || _y < 0)
            _dy = -_dy;

        var speed = Math.Clamp(_spriteSpeed * _elapsedTime, 0, _spriteMaxSpeed);
        _x += _dx * speed;
        _y += _dy * speed;

        this.calculateFirePropagation();
    }

    private void Render()
    {
        _context.ClearRect(0, 0, _width, _height);

        _context.FillStyle = "green";
        _context.FillRect(0, 0, _width, _height);

        _context.StrokeStyle = "rgb(255, 255,0)";
        _context.LineWidth = 3;
        _context.StrokeRect(_x, _y, _spriteWidth, _spriteHeight);
        _context.DrawImage(_spritesheet, _x, _y, _spriteWidth, _spriteHeight);

        var fps = 1000f / _elapsedTime;
        _context.Font = "24px verdana";
        _context.FillStyle = "red";
        _context.FillText($"FPS: {fps:###}", 20, 40);

        _context.PutImageData(renderTarget, data, 10, 50);
    }

    private void OnFrameReady(float timeStamp)
    {
        this.Update(timeStamp);
        this.Render();
    }
}